{"version":3,"sources":["utils/storageUtils.js","redux/action-types.js","redux/reducer.js","redux/store.js","api/ajax.js","api/index.js","redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","utils/memoryUtils.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.jpg"],"names":["user","store","set","remove","SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","initHeadTitle","initUser","get","storageUtils","combineReducers","headTitle","state","action","type","data","errorMsg","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ajax","url","Promise","resolve","reject","axios","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","searchName","searchType","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","reqWeather","city","jsonp","err","results","weather_data","dayPictureUrl","weather","setHeadTitle","receiveUser","logout","Item","Login","handleSubmit","event","preventDefault","props","form","validateFields","values","a","console","log","login","this","validatePwd","rule","value","callback","length","test","to","getFieldDecorator","className","src","logo","alt","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","prefix","style","color","placeholder","validator","htmlType","Component","WrapLogin","create","connect","dispatch","result","msg","menuList","title","key","icon","isPublic","children","SubMenu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes_map","map","getMenuNodes","path","location","pathname","reduce","pre","cItem","openKey","push","onClick","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","getTitle","forEach","confirm","content","onOk","clearInterval","Line","dv","DataSet","createView","source","month","b","c","transform","fields","float","width","height","scale","range","forceFit","label","formatter","val","crosshairs","position","size","shape","stroke","lineWidth","React","Bar","marginLeft","year","sales","tickInterval","RangePicker","Home","isVisited","handleChange","extra","headStyle","suffix","fontWeight","valueStyle","fontSize","defaultValue","moment","format","bodyStyle","padding","Option","AddForm","setForm","categorys","UpdateForm","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","updateCategory","marginRight","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","ProductHome","total","products","price","newStatus","updateStatus","showDetail","procut","memoryUtils","history","getProducts","list","success","onChange","margin","target","current","PicturesWall","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","imgs","img","index","uid","uploadButton","accept","listType","onPreview","footer","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","isLeaf","isUpdate","pCategoryId","childOptions","option","validatePrice","loadData","selectedOptions","targetOption","submit","desc","categoryIds","pw","editor","goBack","createRef","labelCol","span","wrapperCol","autosize","minRows","maxRows","addonAfter","ref","PureComponent","ProductDetail","cName1","cName2","all","dangerouslySetInnerHTML","__html","Product","component","exact","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","onCheck","treeNodes","nextProps","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","getRoles","onRow","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","UserForm","phone","email","User","users","isShow","roleNames","deleteUser","initRoleNames","getUsers","addOrUpdateUser","getFieldsValue","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","goHome","replace","Footer","Sider","Content","Admin","from","textAlign","App","ReactDOM","document","getElementById","module","exports"],"mappings":"iRAKe,WAIHA,GAERC,IAAMC,IAPO,WAOOF,IANT,aAsBXC,IAAME,OAvBO,aCDJC,EAAiB,iBACjBC,EAAe,eACfC,EAAiB,iBACjBC,EAAa,a,4NCU1B,IAAMC,EAAgB,GActB,IAAMC,EFzBS,WAcX,OAAOR,IAAMS,IAfA,aAeiB,GEWjBC,GAyBFC,gCAAgB,CAC7BC,UAtCF,WAAmD,IAAhCC,EAA+B,uDAAvBN,EAAeO,EAAQ,uCAChD,OAAQA,EAAOC,MACb,KAAKZ,EACH,OAAOW,EAAOE,KAChB,QACE,OAAOH,IAkCXd,KAzBF,WAAyC,IAA3Bc,EAA0B,uDAAlBL,EAAUM,EAAQ,uCACtC,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAOU,EAAOf,KAChB,KAAKM,EAGH,O,qVAAO,CAAP,GAAWQ,EAAX,CAAkBI,SAFDH,EAAOG,WAG1B,KAAKX,EACH,MAAO,GACT,QACE,OAAOO,MCjCEK,wBAAYC,EAASC,8BAAoBC,0BAAgBC,O,oOCIzD,SAASC,EAAKC,GAA2B,IAAtBR,EAAqB,uDAAhB,GAAID,EAAY,uDAAP,MAE9C,OAAO,IAAIU,QAAQ,SAACC,EAASC,IAGjB,QAAPZ,EACSa,IAAMnB,IAAIe,EAAK,CACvBK,OAAQb,IAGAY,IAAME,KAAKN,EAAKR,IAGpBe,KAAK,SAAAC,GACXN,EAAQM,EAAShB,QAEhBiB,MAAM,SAAAC,GAEPC,EAAA,EAAQD,MAAM,mCAAYA,EAAMC,aChBtC,IAMaC,EAAW,SAACC,EAAUC,GAAX,OAAwBf,EAAY,SAAU,CAACc,WAAUC,YAAW,SAG/EC,EAAe,SAACC,GAAD,OAAcjB,EAAY,wBAAyB,CAACiB,cAGnEC,EAAiB,SAACC,EAAcF,GAAf,OAA4BjB,EAAY,uBAAwB,CAACmB,eAAcF,YAAW,SAG3GG,EAAoB,SAAC,GAAD,OAAgCpB,EAAY,0BAA2B,CAACqB,WAAxE,EAAEA,WAAkFF,aAApF,EAAcA,cAAqF,SAGvHG,EAAc,SAACD,GAAD,OAAgBrB,EAAY,wBAAyB,CAACqB,gBAGpEE,EAAc,SAACC,EAASC,GAAV,OAAuBzB,EAAY,uBAAwB,CAACwB,UAASC,cAGnFC,EAAkB,SAACC,EAAWC,GAAZ,OAAuB5B,EAAY,+BAAgC,CAAC2B,YAAWC,UAAS,SAQ1GC,GAAoB,SAAC,GAAD,IAAEL,EAAF,EAAEA,QAASC,EAAX,EAAWA,SAAUK,EAArB,EAAqBA,WAAYC,EAAjC,EAAiCA,WAAjC,OAAiD/B,EAAY,yBAAR,aACpFwB,UACAC,YACCM,EAAaD,KAWHE,GAAe,SAACC,GAAD,OAAUjC,EAAY,qBAAsB,CAACiC,QAAO,SAGnEC,GAAwB,SAACC,GAAD,OAAanC,EAAY,oBAAuBmC,EAAQC,IAAI,SAAS,OAAQD,EAAS,SAM9GE,GAAW,kBAAMrC,EAAY,sBAE7BsC,GAAa,SAACC,GAAD,OAAcvC,EAAY,mBAAoB,CAACuC,YAAW,SAEvEC,GAAgB,SAACC,GAAD,OAAUzC,EAAY,sBAAuByC,EAAM,SAInEC,GAAW,kBAAM1C,EAAY,sBAE7B2C,GAAgB,SAACC,GAAD,OAAY5C,EAAY,sBAAuB,CAAC4C,UAAS,SAEzEC,GAAqB,SAACrE,GAAD,OAAUwB,EAAY,iBAAiBxB,EAAK4D,IAAM,SAAW,OAAQ5D,EAAM,SAKhGsE,GAAa,SAACC,GAEzB,OAAO,IAAI7C,QAAQ,SAACC,EAASC,GAC3B,IAAMH,EAAG,kEAA8D8C,EAA9D,4CAETC,IAAM/C,EAAK,GAAI,SAACgD,EAAKxD,GAGnB,GAAKwD,GAAqB,YAAdxD,EAAKmC,OAMfhB,EAAA,EAAQD,MAAM,yDANqB,OAEFlB,EAAKyD,QAAQ,GAAGC,aAAa,GAAvDC,EAF4B,EAE5BA,cAAeC,EAFa,EAEbA,QACtBlD,EAAQ,CAACiD,gBAAeC,kBClFnBC,GAAe,SAACjE,GAAD,MAAgB,CAACG,KAAMZ,EAAgBa,KAAMJ,IAK5DkE,GAAc,SAAC/E,GAAD,MAAW,CAACgB,KAAMX,EAAcL,SAU9CgF,GAAS,WAIpB,OAFArE,IAEO,CAACK,KAAMT,ICtBV0E,GAAO,IAAKA,KAKZC,G,2MAEJC,aAAe,SAACC,GAGdA,EAAMC,iBAGN,EAAKC,MAAMC,KAAKC,eAAhB,sCAA+B,WAAOf,EAAKgB,GAAZ,iBAAAC,EAAA,qDAExBjB,EASHkB,QAAQC,IAAI,8BANLtD,EAAsBmD,EAAtBnD,SAAUC,EAAYkD,EAAZlD,SAGjB,EAAK+C,MAAMO,MAAMvD,EAAUC,IARA,yCAA/B,oCAAAuD,KAAA,iB,EAgCFC,YAAc,SAACC,EAAMC,EAAOC,GAEtBD,EAEOA,EAAME,OAAO,EACtBD,EAAS,2DACAD,EAAME,OAAO,GACtBD,EAAS,4DACC,kBAAkBE,KAAKH,GAGjCC,IAFAA,EAAS,oGANTA,EAAS,yC,wEAgBX,IAAMlG,EAAO8F,KAAKR,MAAMtF,KACxB,GAAGA,GAAQA,EAAK4D,IACd,OAAO,kBAAC,IAAD,CAAUyC,GAAG,UAItB,IACQC,EADKR,KAAKR,MAAMC,KAChBe,kBAER,OACE,yBAAKC,UAAU,SACb,4BAAQA,UAAU,gBAChB,yBAAKC,IAAKC,IAAMC,IAAI,SACpB,wFAEF,6BAASH,UAAU,iBACjB,yBAAKA,UAAWvG,EAAKkB,SAAW,iBAAmB,aAAclB,EAAKkB,UACtE,wDACA,uBAAMyF,SAAUb,KAAKX,aAAcoB,UAAU,cAC3C,kBAACtB,GAAD,KAWIqB,EAAkB,WAAY,CAE5BM,MAAO,CACL,CAAEC,UAAU,EAAMC,YAAY,EAAM1E,QAAS,8CAC7C,CAAE2E,IAAK,EAAG3E,QAAS,yCACnB,CAAE4E,IAAK,GAAI5E,QAAS,0CACpB,CAAE6E,QAAS,kBAAmB7E,QAAS,2GAEzC8E,aAAc,SARhBZ,CAUE,uBACEa,OAAQ,uBAAMnG,KAAK,OAAOoG,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,yBAKpB,sBAAMrC,KAAN,KAEIqB,EAAkB,WAAY,CAC5BM,MAAO,CACL,CACEW,UAAWzB,KAAKC,eAHtBO,CAOE,uBACEa,OAAQ,uBAAMnG,KAAK,OAAOoG,MAAO,CAAEC,MAAO,qBAC1CrG,KAAK,WACLsG,YAAY,mBAMpB,sBAAMrC,KAAN,KACE,uBAAQjE,KAAK,UAAUwG,SAAS,SAASjB,UAAU,qBAAnD,wB,GA7HMkB,aA+JdC,GAAY,IAAKC,QAAL,CAAczC,IACjB0C,eACb,SAAA9G,GAAK,MAAK,CAACd,KAAMc,EAAMd,OACvB,CAAC6F,MD3IkB,SAACvD,EAAUC,GAC9B,6CAAO,WAAMsF,GAAN,mBAAAnC,EAAA,qEAEgBrD,EAASC,EAAUC,GAFnC,OAIc,KAFbuF,EAFD,QAIK1E,QACFpD,EAAO8H,EAAO7G,KAEpBN,EAAsBX,GAEtB6H,EAAS9C,GAAY/E,MAEf+H,EAAMD,EAAOC,IAEnBF,EA7BqC,CAAC7G,KAAMV,EAAgBY,SA6BtC6G,KAbnB,yCAAP,mDAAM,KCwIOH,CAGbF,I,sCCpHaM,GAlEE,CACf,CACEC,MAAO,eACPC,IAAK,QACLC,KAAM,OACNC,UAAU,GAEZ,CACEH,MAAO,eACPC,IAAK,YACLC,KAAM,WACNE,SAAU,CACR,CACEJ,MAAO,2BACPC,IAAK,YACLC,KAAM,QAER,CACEF,MAAO,2BACPC,IAAK,WACLC,KAAM,UAKZ,CACEF,MAAO,2BACPC,IAAK,QACLC,KAAM,QAER,CACEF,MAAO,2BACPC,IAAK,QACLC,KAAM,UAGR,CACEF,MAAO,2BACPC,IAAK,UACLC,KAAM,aACNE,SAAU,CACR,CACEJ,MAAO,qBACPC,IAAK,cACLC,KAAM,aAER,CACEF,MAAO,qBACPC,IAAK,eACLC,KAAM,cAER,CACEF,MAAO,eACPC,IAAK,cACLC,KAAM,gBC5CRG,I,OAAU,KAAKA,SAKfC,G,2MAKJC,QAAU,SAACC,GAAU,IACZP,EAAiBO,EAAjBP,IAAKE,EAAYK,EAAZL,SAENM,EAAQ,EAAKpD,MAAMtF,KAAKiE,KAAKyE,MAOnC,QAAc,UANG,EAAKpD,MAAMtF,KAAKsC,WAMR8F,IAAkC,IAAtBM,EAAMC,QAAQT,OAEzCO,EAAKJ,YACJI,EAAKJ,SAASO,KAAK,SAAAC,GAAK,OAAiC,IAA5BH,EAAMC,QAAQE,EAAMX,Q,EAU9DY,iBAAmB,SAACd,GAClB,OAAOA,EAASe,IAAI,SAAAN,GA6BlB,OAAIA,EAAKJ,SAWL,kBAACC,GAAD,CACEJ,IAAKO,EAAKP,IACVD,MACE,8BACA,uBAAMjH,KAAMyH,EAAKN,OACjB,8BAAOM,EAAKR,SAIb,EAAKe,aAAaP,EAAKJ,WAlB1B,uBAAMpD,KAAN,CAAWiD,IAAKO,EAAKP,KACnB,kBAAC,IAAD,CAAM7B,GAAIoC,EAAKP,KACb,uBAAMlH,KAAMyH,EAAKN,OACjB,8BAAOM,EAAKR,Y,EA2BxBe,aAAe,SAAChB,GAEd,IAAMiB,EAAO,EAAK3D,MAAM4D,SAASC,SAEjC,OAAOnB,EAASoB,OAAO,SAACC,EAAKZ,GAGvB,EAAKD,QAAQC,KAIXA,EAAKJ,UAiBOI,EAAKJ,SAASO,KAAK,SAAAU,GAAK,OAA8B,IAA1BL,EAAKN,QAAQW,EAAMpB,SAG3D,EAAKqB,QAAUd,EAAKP,KAKtBmB,EAAIG,KACF,kBAAClB,GAAD,CACEJ,IAAKO,EAAKP,IACVD,MACE,8BACF,uBAAMjH,KAAMyH,EAAKN,OACjB,8BAAOM,EAAKR,SAIX,EAAKe,aAAaP,EAAKJ,cAjCxBI,EAAKP,MAAMe,GAAiC,IAAzBA,EAAKN,QAAQF,EAAKP,MAEvC,EAAK5C,MAAMR,aAAa2D,EAAKR,OAG/BoB,EAAIG,KACF,uBAAMvE,KAAN,CAAWiD,IAAKO,EAAKP,KACnB,kBAAC,IAAD,CAAM7B,GAAIoC,EAAKP,IAAKuB,QAAS,kBAAM,EAAKnE,MAAMR,aAAa2D,EAAKR,SAC9D,uBAAMjH,KAAMyH,EAAKN,OACjB,8BAAOM,EAAKR,YA8BtB,OAAOoB,GACN,K,2FAQHvD,KAAK4D,UAAY5D,KAAKkD,aAAahB,M,+BAMnC,IAAIiB,EAAOnD,KAAKR,MAAM4D,SAASC,SAED,IAA3BF,EAAKN,QAAQ,cACdM,EAAO,YAIT,IAAMM,EAAUzD,KAAKyD,QAErB,OACE,yBAAKhD,UAAU,YACb,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,mBACrB,yBAAKC,IAAKC,IAAMC,IAAI,SACpB,yDAGF,wBACEiD,KAAK,SACLC,MAAM,OACNC,aAAc,CAACZ,GACfa,gBAAiB,CAACP,IAIhBzD,KAAK4D,gB,GArLKjC,aAmMPG,eACb,SAAA9G,GAAK,MAAK,CAACd,KAAMc,EAAMd,OACvB,CAAC8E,iBAFY8C,CAGbmC,YAAWxB,K,mCChNE,SAASyB,GAAW1E,GACjC,OAAO,4CAAYA,EAAZ,CAAmBiB,UAAU,iBCC/B,SAAS0D,GAAYC,GAC1B,IAAKA,EAAM,MAAO,GAClB,IAAIC,EAAO,IAAIC,KAAKF,GACpB,OAAOC,EAAKE,cAAgB,KAAOF,EAAKG,WAAa,GAAK,IAAMH,EAAKI,UACjE,IAAMJ,EAAKK,WAAa,IAAML,EAAKM,aAAe,IAAMN,EAAKO,a,WCI7DC,G,2MAEJ7J,MAAQ,CACN8J,YAAaX,GAAYG,KAAKS,OAC9BjG,cAAe,GACfC,QAAS,I,EAGXiG,QAAU,WAER,EAAKC,WAAaC,YAAY,WAC5B,IAAMJ,EAAcX,GAAYG,KAAKS,OACrC,EAAKI,SAAS,CAACL,iBACd,M,EAGLM,W,qBAAa,gCAAAxF,EAAA,qEAE4BpB,GAAW,gBAFvC,gBAEJM,EAFI,EAEJA,cAAeC,EAFX,EAEWA,QAEtB,EAAKoG,SAAS,CAACrG,gBAAeC,YAJnB,yC,EAObsG,SAAW,WAET,IACIlD,EADEgB,EAAO,EAAK3D,MAAM4D,SAASC,SAejC,OAbAnB,GAASoD,QAAQ,SAAA3C,GACf,GAAIA,EAAKP,MAAMe,EACbhB,EAAQQ,EAAKR,WACR,GAAIQ,EAAKJ,SAAU,CAExB,IAAMiB,EAAQb,EAAKJ,SAASO,KAAK,SAAAU,GAAK,OAA8B,IAA1BL,EAAKN,QAAQW,EAAMpB,OAE1DoB,IAEDrB,EAAQqB,EAAMrB,UAIbA,G,EAMTjD,OAAS,WAEP,KAAMqG,QAAQ,CACZC,QAAS,kCACTC,KAAM,WACJ5F,QAAQC,IAAI,KAAZ,iBACA,EAAKN,MAAMN,a,mFAWfc,KAAKgF,UAELhF,KAAKoF,e,6CAaLM,cAAc1F,KAAKiF,c,+BAIX,IAAD,EAEuCjF,KAAKhF,MAA5C8J,EAFA,EAEAA,YAAahG,EAFb,EAEaA,cAAeC,EAF5B,EAE4BA,QAE7BvC,EAAWwD,KAAKR,MAAMtF,KAAKsC,SAI3B2F,EAAQnC,KAAKR,MAAMzE,UACzB,OACE,yBAAK0F,UAAU,UACb,yBAAKA,UAAU,cACb,+CAAWjE,GACX,kBAAC0H,GAAD,CAAYP,QAAS3D,KAAKd,QAA1B,iBAEF,yBAAKuB,UAAU,iBACb,yBAAKA,UAAU,sBAAsB0B,GACrC,yBAAK1B,UAAU,uBACb,8BAAOqE,GACP,yBAAKpE,IAAK5B,EAAe8B,IAAI,YAC7B,8BAAO7B,U,GAtGE4C,aA8GNG,eACb,SAAA9G,GAAK,MAAK,CAACD,UAAWC,EAAMD,UAAWb,KAAMc,EAAMd,OACnD,CAACgF,WAFY4C,CAGbmC,YAAWY,K,8HCtHQc,G,iLAEjB,IA2EMC,GADK,IAAIC,MACDC,aAAaC,OA3Ed,CACX,CACEC,MAAO,MACPpG,EAAG,EACHqG,EAAG,IACHC,EAAG,KAEL,CACEF,MAAO,MACPpG,EAAG,IACHqG,EAAG,IACHC,EAAG,KAEL,CACEF,MAAO,MACPpG,EAAG,IACHqG,EAAG,IACHC,EAAG,KAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,IACHC,EAAG,KAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,KACHC,EAAG,KAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,KACHC,EAAG,IAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,GACHC,EAAG,MAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,KACHC,EAAG,MAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,KACHC,EAAG,MAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,KACHC,EAAG,MAEL,CACEF,MAAO,MACPpG,EAAG,KACHqG,EAAG,IACHC,EAAG,MAEL,CACEF,MAAO,MACPpG,EAAG,IACHqG,EAAG,IACHC,EAAG,QAKPN,EAAGO,UAAU,CACXjL,KAAM,OACNkL,OAAQ,CAAC,IAAK,IAAK,KAEnBhE,IAAK,OAELjC,MAAO,gBAOT,OACE,yBAAKmB,MAAO,CAAC+E,MAAO,QAASC,MAAO,IAAKC,OAAQ,MAC/C,kBAAC,SAAD,CAAOA,OAAQ,IAAKpL,KAAMyK,EAAIY,MAPrB,CACXR,MAAO,CACLS,MAAO,CAAC,EAAG,KAKgCC,UAAQ,GACjD,kBAAC,UAAD,MACA,kBAAC,QAAD,CAAM/I,KAAK,UACX,kBAAC,QAAD,CACEA,KAAK,cACLgJ,MAAO,CACLC,UAAW,SAAAC,GAAG,gBAAOA,EAAP,oBAGlB,kBAAC,WAAD,CACEC,WAAY,CACV5L,KAAM,OAGV,kBAAC,QAAD,CACEA,KAAK,OACL6L,SAAS,oBACTC,KAAM,EACNzF,MAAO,OACP0F,MAAO,WAET,kBAAC,QAAD,CACE/L,KAAK,QACL6L,SAAS,oBACTC,KAAM,EACNC,MAAO,SACP1F,MAAO,OACPD,MAAO,CACL4F,OAAQ,OACRC,UAAW,W,GA1HSC,IAAMzF,WCFnB0F,G,iLAyDjB,OACE,yBAAK/F,MAAO,CAACgF,MAAO,OAAQgB,YAAa,KACvC,kBAAC,SAAD,CAAOf,OAAQ,IAAKpL,KAzDX,CACX,CACEoM,KAAM,UACNC,MAAO,IAET,CACED,KAAM,UACNC,MAAO,IAET,CACED,KAAM,UACNC,MAAO,IAET,CACED,KAAM,UACNC,MAAO,KAET,CACED,KAAM,UACNC,MAAO,IAET,CACED,KAAM,UACNC,MAAO,IAET,CACED,KAAM,UACNC,MAAO,IAET,CACED,KAAM,UACNC,MAAO,IAET,CACED,KAAM,WACNC,MAAO,IAET,CACED,KAAM,WACNC,MAAO,IAET,CACED,KAAM,WACNC,MAAO,IAET,CACED,KAAM,WACNC,MAAO,KAUyBhB,MAPvB,CACXgB,MAAO,CACLC,aAAc,KAK+Bf,UAAQ,GACnD,kBAAC,QAAD,CAAM/I,KAAK,SACX,kBAAC,QAAD,CAAMA,KAAK,UACX,kBAAC,WAAD,CACEmJ,WAAY,CACV5L,KAAM,OAGV,kBAAC,QAAD,CAAMA,KAAK,WAAW6L,SAAS,qB,GAnERK,IAAMzF,WCOhC+F,I,YAAAA,aAEcC,G,2MAEnB3M,MAAQ,CACN4M,WAAW,G,EAGbC,aAAe,SAACD,GACd,OAAO,kBAAM,EAAKzC,SAAS,CAACyC,gB,wEAGpB,IACDA,EAAa5H,KAAKhF,MAAlB4M,UAEP,OACE,yBAAKnH,UAAU,QACb,wBACEA,UAAU,YACV0B,MAAM,2BACN2F,MAAO,uBAAMxG,MAAO,CAACC,MAAO,mBAAoBrG,KAAK,oBACrDoG,MAAO,CAACgF,MAAO,KACfyB,UAAW,CAACxG,MAAO,oBAEnB,wBACEpB,MAAO,QACP6H,OAAO,SACP1G,MAAO,CAAC2G,WAAY,YAEtB,wBACE9H,MAAO,GACP+H,WAAY,CAACC,SAAU,IACvB9G,OAAQ,qBACR2G,OAAQ,iCAAM,uBAAM1G,MAAO,CAACC,MAAO,MAAO+F,WAAY,IAAKpM,KAAK,kBAElE,wBACEiF,MAAO,GACP+H,WAAY,CAACC,SAAU,IACvB9G,OAAQ,qBACR2G,OAAQ,iCAAM,uBAAM1G,MAAO,CAACC,MAAO,UAAW+F,WAAY,IAAKpM,KAAK,iBAIxE,kBAAC,GAAD,MAEA,wBACEuF,UAAU,eACV0B,MAAO,yBAAK1B,UAAU,aACpB,0BAAMA,UAAWmH,EAAY,qCAAuC,oBAC9DjE,QAAS3D,KAAK6H,cAAa,IADjC,sBAEA,0BAAMpH,UAAWmH,EAAY,GAAK,mBAAoBjE,QAAS3D,KAAK6H,cAAa,IAAjF,uBAEFC,MAAO,kBAACJ,GAAD,CACLU,aAAc,CAACC,KAAO,aAtDf,cAsD0CA,KAAO,aAtDjD,eAuDPC,OAvDO,gBA0DT,wBACE7H,UAAU,kBACV0B,MAAOyF,EAAY,2BAAS,2BAC5BW,UAAW,CAACC,QAAS,EAAGjC,OAAQ,KAChCuB,MAAO,uBAAM5M,KAAK,YAElB,kBAAC,GAAD,OAGF,wBAAMiH,MAAM,eAAK2F,MAAO,uBAAM5M,KAAK,WAAYuF,UAAU,oBACvD,4BACE,uBAAUtB,KAAV,CAAeoC,MAAM,SAArB,wCACA,uBAAUpC,KAAV,CAAeoC,MAAM,SAArB,oDACA,uBAAUpC,KAAV,CAAeoC,MAAM,OACnB,uDACA,wDAEF,uBAAUpC,KAAV,KACE,mEACA,uDACA,gE,GA3EkBwC,a,qCCT5BxC,GAAO,IAAKA,KACZsJ,GAAS,KAAOA,OAKhBC,G,oMASF1I,KAAKR,MAAMmJ,QAAQ3I,KAAKR,MAAMC,Q,+BAGtB,IAAD,EACuBO,KAAKR,MAA5BoJ,EADA,EACAA,UAAWjM,EADX,EACWA,SACV6D,EAAsBR,KAAKR,MAAMC,KAAjCe,kBAER,OACE,2BACE,kBAAC,GAAD,KAEIA,EAAkB,WAAY,CAC5BY,aAAczE,GADhB6D,CAGE,4BACE,kBAACiI,GAAD,CAAQtI,MAAM,KAAd,4BAEEyI,EAAU3F,IAAI,SAAAiD,GAAC,OAAI,kBAACuC,GAAD,CAAQtI,MAAO+F,EAAEpI,KAAMoI,EAAEvI,WAQtD,kBAAC,GAAD,KAEI6C,EAAkB,eAAgB,CAChCY,aAAc,GACdN,MAAO,CACL,CAACC,UAAU,EAAMzE,QAAS,sDAH9BkE,CAME,uBAAOgB,YAAY,sD,GA1CXG,aAmDP,OAAKE,QAAL,CAAc6G,IC1DvBvJ,GAAO,IAAKA,KAKZ0J,G,oMASF7I,KAAKR,MAAMmJ,QAAQ3I,KAAKR,MAAMC,Q,+BAGtB,IAED5C,EAAgBmD,KAAKR,MAArB3C,aACC2D,EAAsBR,KAAKR,MAAMC,KAAjCe,kBAER,OACE,2BACE,kBAAC,GAAD,KAEIA,EAAkB,eAAgB,CAChCY,aAAcvE,EACdiE,MAAO,CACL,CAACC,UAAU,EAAMzE,QAAS,sDAH9BkE,CAME,uBAAOgB,YAAY,sD,GA3BRG,aAoCV,OAAKE,QAAL,CAAcgH,IC9BRC,G,2MAEnB9N,MAAQ,CACN+N,SAAS,EACTH,UAAW,GACXI,aAAc,GACdrM,SAAU,IACVsM,WAAY,GACZC,WAAY,G,EAMdC,YAAc,WACZ,EAAKC,QAAU,CACb,CACEjH,MAAO,iCACPkH,UAAW,QAEb,CACElH,MAAO,eACPmE,MAAO,IACPgD,OAAQ,SAACC,GAAD,OACN,8BACE,kBAACrF,GAAD,CAAYP,QAAS,kBAAM,EAAK6F,WAAWD,KAA3C,4BAEuB,MAAtB,EAAKvO,MAAM2B,SAAiB,kBAACuH,GAAD,CAAYP,QAAS,kBAAM,EAAK8F,iBAAiBF,KAAjD,kCAAiF,U,EAaxHG,a,sCAAe,WAAO/M,GAAP,iBAAAiD,EAAA,4DAGb,EAAKuF,SAAS,CAAC4D,SAAS,IACxBpM,EAAWA,GAAY,EAAK3B,MAAM2B,SAJrB,SAMQD,EAAaC,GANrB,OAMPqF,EANO,OAQb,EAAKmD,SAAS,CAAC4D,SAAS,IAEL,IAAhB/G,EAAO1E,QAEFsL,EAAY5G,EAAO7G,KACX,MAAXwB,EAED,EAAKwI,SAAS,CACZyD,cAKF,EAAKzD,SAAS,CACZ6D,aAAcJ,KAIlBtM,EAAA,EAAQD,MAAM,oDA1BH,yC,wDAiCfoN,iBAAmB,SAACF,GAElB,EAAKpE,SAAS,CACZxI,SAAU4M,EAASzL,IACnBmL,WAAYM,EAAS5L,MACpB,WACDkC,QAAQC,IAAI,WAAY,EAAK9E,MAAM2B,UAEnC,EAAK+M,kB,EAUTC,cAAgB,WAEd,EAAKxE,SAAS,CACZxI,SAAU,IACVsM,WAAY,GACZD,aAAc,M,EAOlBY,aAAe,WAEb,EAAKnK,KAAKoK,cAEV,EAAK1E,SAAS,CACZ+D,WAAY,K,EAOhBY,QAAU,WACR,EAAK3E,SAAS,CACZ+D,WAAY,K,EAOhBa,YAAc,WACZ,EAAKtK,KAAKC,eAAV,sCAAyB,WAAOf,EAAKgB,GAAZ,iBAAAC,EAAA,wDAClBjB,EADkB,uBAGrB,EAAKwG,SAAS,CACZ+D,WAAY,IAIPvM,EAA0BgD,EAA1BhD,SAAUE,EAAgB8C,EAAhB9C,aAEjB,EAAK4C,KAAKoK,cAVW,SAWAjN,EAAeC,EAAcF,GAX7B,OAYF,IAZE,OAYXW,SAGLX,IAAW,EAAK3B,MAAM2B,SAEvB,EAAK+M,eACe,MAAX/M,GACT,EAAK+M,aAAa,MAnBD,yCAAzB,oCAAA1J,KAAA,iB,EA8BFwJ,WAAa,SAACD,GAEZ,EAAKA,SAAWA,EAEhB,EAAKpE,SAAS,CACZ+D,WAAY,K,EAOhBc,eAAiB,WACfnK,QAAQC,IAAI,oBAEZ,EAAKL,KAAKC,eAAV,sCAAyB,WAAOf,EAAKgB,GAAZ,iBAAAC,EAAA,wDACnBjB,EADmB,uBAGrB,EAAKwG,SAAS,CACZ+D,WAAY,IAIRnM,EAAa,EAAKwM,SAASzL,IAC1BjB,EAAgB8C,EAAhB9C,aAEP,EAAK4C,KAAKoK,cAXW,SAcA/M,EAAkB,CAACC,aAAYF,iBAd/B,OAeD,IAfC,OAeVS,QAET,EAAKoM,eAjBc,yCAAzB,oCAAA1J,KAAA,iB,2FA+BAA,KAAKmJ,gB,0CAQLnJ,KAAK0J,iB,+BAGG,IAAD,SAGsE1J,KAAKhF,MAA3E4N,EAHA,EAGAA,UAAWI,EAHX,EAGWA,aAAcrM,EAHzB,EAGyBA,SAAUsM,EAHnC,EAGmCA,WAAYF,EAH/C,EAG+CA,QAASG,EAHxD,EAGwDA,WAEzDK,EAAWvJ,KAAKuJ,UAAY,GAG5BpH,EAAqB,MAAbxF,EAAmB,uCAC/B,8BACE,kBAACuH,GAAD,CAAYP,QAAS3D,KAAK2J,eAA1B,wCACA,uBAAMzO,KAAK,cAAcoG,MAAO,CAAC2I,YAAa,KAC9C,8BAAOhB,IAILnB,EACJ,uBAAQ5M,KAAK,UAAUyI,QAAS3D,KAAK8J,SACnC,uBAAM5O,KAAK,SADb,gBAMF,OACE,wBAAMiH,MAAOA,EAAO2F,MAAOA,GACzB,wBACEoC,UAAQ,EACRC,OAAO,MACPpB,QAASA,EACTqB,WAAuB,MAAXzN,EAAiBiM,EAAYI,EACzCI,QAASpJ,KAAKoJ,QACdiB,WAAY,CAACC,gBAAiB,EAAGC,iBAAiB,KAGpD,wBACEpI,MAAM,2BACNqI,QAAsB,IAAbtB,EACTzD,KAAMzF,KAAK+J,YACXU,SAAUzK,KAAK4J,cAEf,kBAAC,GAAD,CACEhB,UAAWA,EACXjM,SAAUA,EACVgM,QAAS,SAAClJ,GAAU,EAAKA,KAAOA,MAIpC,wBACE0C,MAAM,2BACNqI,QAAsB,IAAbtB,EACTzD,KAAMzF,KAAKgK,eACXS,SAAUzK,KAAK4J,cAEf,kBAAC,GAAD,CACE/M,aAAc0M,EAAS5L,KACvBgL,QAAS,SAAClJ,GAAU,EAAKA,KAAOA,W,GA3QNkC,aCfzB+I,GAAY,EACZC,GAAe,gCCDb,IACbzQ,KAAM,GACN2D,QAAS,ICWL4K,GAAS,KAAOA,OAKDmC,G,2MAEnB5P,MAAQ,CACN6P,MAAO,EACPC,SAAU,GACV/B,SAAS,EACTvL,WAAY,GACZC,WAAY,e,EAMd0L,YAAc,WACZ,EAAKC,QAAU,CACb,CACEjH,MAAO,2BACPkH,UAAW,QAEb,CACElH,MAAO,2BACPkH,UAAW,QAEb,CACElH,MAAO,eACPkH,UAAW,QACXC,OAAQ,SAACyB,GAAD,MAAW,OAAMA,IAE3B,CACEzE,MAAO,IACPnE,MAAO,eAEPmH,OAAQ,SAACzL,GAAa,IACbP,EAAeO,EAAfP,OAAQQ,EAAOD,EAAPC,IACTkN,EAAqB,IAAT1N,EAAa,EAAI,EACnC,OACE,8BACE,uBACEpC,KAAK,UACLyI,QAAS,kBAAM,EAAKsH,aAAanN,EAAKkN,KAE5B,IAAT1N,EAAa,eAAO,gBAEvB,8BAAgB,IAATA,EAAa,eAAO,yBAKnC,CACEgJ,MAAO,IACPnE,MAAO,eACPmH,OAAQ,SAACzL,GACP,OACE,8BAEE,kBAACqG,GAAD,CAAYP,QAAS,kBAAM,EAAKuH,WAAWrN,KAA3C,gBACA,kBAACqG,GAAD,CAAYP,QAAS,kBAAM,EAAK6F,WAAW3L,KAA3C,qB,EAWZqN,WAAa,SAACC,GAEZC,GAAYvN,QAAUsN,EACtB,EAAK3L,MAAM6L,QAAQ3H,KAAK,oB,EAM1B8F,WAAa,SAAC2B,GAEZC,GAAYvN,QAAUsN,EACtB,EAAK3L,MAAM6L,QAAQ3H,KAAK,uB,EAM1B4H,Y,sCAAc,WAAOpO,GAAP,2BAAA0C,EAAA,wDACZ,EAAK1C,QAAUA,EACf,EAAKiI,SAAS,CAAC4D,SAAS,IAFZ,EAIqB,EAAK/N,MAA/BwC,EAJK,EAILA,WAAYC,EAJP,EAIOA,YAGfD,EAPQ,gCAQKD,GAAkB,CAACL,UAASC,SAAUuN,GAAWlN,aAAYC,eARlE,OAQVuE,EARU,+CAUK/E,EAAYC,EAASwN,IAV1B,QAUV1I,EAVU,eAaZ,EAAKmD,SAAS,CAAC4D,SAAS,IACF,IAAlB/G,EAAO1E,SAAc,EAED0E,EAAO7G,KAAtB0P,EAFgB,EAEhBA,MAAOU,EAFS,EAETA,KACd,EAAKpG,SAAS,CACZ0F,QACAC,SAAUS,KAnBF,0C,wDA2BdN,a,sCAAe,WAAO5N,EAAWC,GAAlB,SAAAsC,EAAA,qEACQxC,EAAgBC,EAAWC,GADnC,OAEM,IAFN,OAEHA,SACRhB,EAAA,EAAQkP,QAAQ,wCAChB,EAAKF,YAAY,EAAKpO,UAJX,yC,mJASb8C,KAAKmJ,gB,0CAILnJ,KAAKsL,YAAY,K,+BAGT,IAAD,SAGoDtL,KAAKhF,MAAzD8P,EAHA,EAGAA,SAAUD,EAHV,EAGUA,MAAO9B,EAHjB,EAGiBA,QAAStL,EAH1B,EAG0BA,WAAYD,EAHtC,EAGsCA,WAIvC2E,EACJ,8BACE,wBACEhC,MAAQ1C,EACR6D,MAAO,CAACgF,MAAO,KACfmF,SAAU,SAAAtL,GAAK,OAAI,EAAKgF,SAAS,CAAC1H,WAAW0C,MAE7C,kBAAC,GAAD,CAAQA,MAAM,eAAd,kCACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,mCAEF,uBACEqB,YAAY,qBACZF,MAAO,CAACgF,MAAO,IAAKoF,OAAQ,UAC5BvL,MAAO3C,EACPiO,SAAU,SAAAnM,GAAK,OAAI,EAAK6F,SAAS,CAAC3H,WAAW8B,EAAMqM,OAAOxL,WAE5D,uBAAQjF,KAAK,UAAUyI,QAAS,kBAAM,EAAK2H,YAAY,KAAvD,iBAIExD,EACJ,uBAAQ5M,KAAK,UAAUyI,QAAS,kBAAM,EAAKnE,MAAM6L,QAAQ3H,KAAK,wBAC5D,uBAAMxI,KAAK,SADb,4BAMF,OACE,wBAAMiH,MAAOA,EAAO2F,MAAOA,GACzB,wBACEoC,UAAQ,EACRC,OAAO,MACPpB,QAASA,EACTqB,WAAYU,EACZ1B,QAASpJ,KAAKoJ,QACdiB,WAAY,CACVuB,QAAS5L,KAAK9C,QACd2N,QACAP,gBAAiBI,GACjBH,iBAAiB,EACjBkB,SAAUzL,KAAKsL,oB,GA/Kc3J,a,iDCbpBkK,G,YAmBnB,WAAarM,GAAQ,IAAD,uBAClB,4CAAMA,KAdRxE,MAAQ,CACN8Q,gBAAgB,EAChBC,aAAc,GACdC,SAAU,IAUQ,EA2BpBC,QAAW,WACT,OAAO,EAAKjR,MAAMgR,SAAS/I,IAAI,SAAAiJ,GAAI,OAAIA,EAAKvO,QA5B1B,EAkCpBiM,aAAe,kBAAM,EAAKzE,SAAS,CAAE2G,gBAAgB,KAlCjC,EAoCpBK,cAAgB,SAAAD,GACdrM,QAAQC,IAAI,kBAAmBoM,GAE/B,EAAK/G,SAAS,CACZ4G,aAAcG,EAAKvQ,KAAOuQ,EAAKE,SAC/BN,gBAAgB,KAzCA,EAiDpBjE,aAjDoB,sCAiDL,uCAAAjI,EAAA,wDAASsM,EAAT,EAASA,KAAMF,EAAf,EAAeA,SAC5BnM,QAAQC,IAAI,iBAAkBoM,EAAK5O,OAAQ0O,EAAS3L,OAAQ6L,IAAOF,EAASA,EAAS3L,OAAO,IAG3E,SAAd6L,EAAK5O,OAJK,gBAMQ,KADb0E,EAASkK,EAAK/P,UACVmB,QACRhB,EAAA,EAAQkP,QAAQ,yCADI,EAEAxJ,EAAO7G,KAApBwC,EAFa,EAEbA,KAAMhC,EAFO,EAEPA,KACbuQ,EAAOF,EAASA,EAAS3L,OAAO,IAC3B1C,KAAOA,EACZuO,EAAKvQ,IAAMA,GAEXW,EAAA,EAAQD,MAAM,wCAbL,0BAeY,YAAd6P,EAAK5O,OAfH,kCAgBUI,GAAawO,EAAKvO,MAhB5B,QAiBS,IAjBT,OAiBAL,OACThB,EAAA,EAAQkP,QAAQ,yCAEhBlP,EAAA,EAAQD,MAAM,yCApBL,QAyBb,EAAK8I,SAAS,CAAE6G,aAzBH,0CAjDK,sDAGlB,IAAIA,EAAW,GAGRK,EAAQ,EAAK7M,MAAb6M,KANW,OAOdA,GAAQA,EAAKhM,OAAO,IACtB2L,EAAWK,EAAKpJ,IAAI,SAACqJ,EAAKC,GAAN,MAAiB,CACnCC,KAAMD,EACN5O,KAAM2O,EACNhP,OAAQ,OACR3B,IAAKgP,GAAe2B,MAKxB,EAAKtR,MAAQ,CACX8Q,gBAAgB,EAChBC,aAAc,GACdC,YApBgB,E,sEA6EV,IAAD,EAC4ChM,KAAKhF,MAAhD8Q,EADD,EACCA,eAAgBC,EADjB,EACiBA,aAAcC,EAD/B,EAC+BA,SAChCS,EACJ,6BACE,uBAAMvR,KAAK,SACX,wCAGJ,OACE,6BACE,wBACED,OAAO,qBACPyR,OAAO,UACP/O,KAAK,QACLgP,SAAS,eACTX,SAAUA,EACVY,UAAW5M,KAAKmM,cAChBV,SAAUzL,KAAK6H,cAEdmE,EAAS3L,QAAU,EAAI,KAAOoM,GAGjC,wBAAOjC,QAASsB,EAAgBe,OAAQ,KAAMpC,SAAUzK,KAAK4J,cAC3D,yBAAKhJ,IAAI,UAAUU,MAAO,CAAEgF,MAAO,QAAU5F,IAAKqL,U,GAvHlB3E,IAAMzF,W,8DCI3BmL,I,oBAUnB,WAAYtN,GAAQ,IAAD,uBACjB,4CAAMA,KALRxE,MAAQ,CACN+R,YAAaC,eAAYC,eAGR,EAqBnBC,oBAAsB,SAACH,GACrBlN,QAAQC,IAAI,yBACZ,EAAKqF,SAAS,CACZ4H,iBAxBe,EA4BnBI,UAAY,WAEV,OAAOC,KAAYC,wBAAa,EAAKrS,MAAM+R,YAAYO,uBA9BtC,EAiCnBC,oBAAsB,SAACrB,GACrB,OAAO,IAAItQ,QACT,SAACC,EAASC,GACR,IAAM0R,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,sBACjB,IAAMvS,EAAO,IAAIwS,SACjBxS,EAAKyS,OAAO,QAAS1B,GACrBsB,EAAIK,KAAK1S,GACTqS,EAAIM,iBAAiB,OAAQ,WAC3B,IACMnS,EADWoS,KAAKC,MAAMR,EAAIS,cACX9S,KAAKQ,IAC1BE,EAAQ,CAACV,KAAM,CAAC+S,KAAMvS,OAExB6R,EAAIM,iBAAiB,QAAS,WAC5B,IAAMzR,EAAQ0R,KAAKC,MAAMR,EAAIS,cAC7BnS,EAAOO,QA9Cb,IAAM8R,EAAO,EAAK3O,MAAM4O,OACxB,GAAID,EAAM,CACR,IAAME,EAAeC,KAAYH,GAC3BI,EAAeC,gBAAaC,qBAAqBJ,EAAaK,eAC9D3B,EAAcC,eAAY2B,kBAAkBJ,GAClD,EAAKvT,MAAQ,CACX+R,oBAGF,EAAK/R,MAAQ,CACX+R,YAAaC,eAAYC,eAZZ,S,sEAsDT,IACDF,EAAe/M,KAAKhF,MAApB+R,YACP,OACE,kBAAC,UAAD,CACEA,YAAaA,EACb6B,YAAa,CAACC,OAAQ,kBAAmBC,UAAW,IAAKC,YAAa,IACtE7B,oBAAqBlN,KAAKkN,oBAC1B8B,QAAS,CACPC,MAAO,CAAEC,eAAgBlP,KAAKuN,oBAAqB3M,IAAK,CAAEuO,SAAS,EAAMC,WAAW,W,GAxElDzN,cCKrCxC,G,IAAAA,KACCkQ,G,IAAAA,SAKFC,G,YAMJ,WAAa9P,GAAQ,IAAD,8BAClB,4CAAMA,KALRxE,MAAQ,CACNuU,QAAS,IAGS,EAQpBC,YARoB,sCAQN,WAAO5G,GAAP,2BAAAhJ,EAAA,wDAEN2P,EAAU3G,EAAU3F,IAAI,SAAAiD,GAAC,MAAK,CAClC/F,MAAO+F,EAAEpI,IACT6I,MAAOT,EAAEvI,KACT8R,QAAQ,KALE,kBASLC,EATK,EASLA,SAAU7R,EATL,EASKA,QACV8R,EAAe9R,EAAf8R,aACJD,GAA0B,MAAdC,EAXH,iCAaiB,EAAKjG,aAAaiG,GAbnC,OAaJ3G,EAbI,OAeJ4G,EAAe5G,EAAa/F,IAAI,SAAAiD,GAAC,MAAK,CAC1C/F,MAAO+F,EAAEpI,IACT6I,MAAOT,EAAEvI,KACT8R,QAAQ,KAIWF,EAAQzM,KAAK,SAAA+M,GAAM,OAAIA,EAAO1P,QAAQwP,IAG9CpN,SAAWqN,EAzBd,QA8BZ,EAAKzK,SAAS,CACZoK,YA/BU,0CARM,wDA+CpB7F,aA/CoB,sCA+CL,WAAO/M,GAAP,iBAAAiD,EAAA,qEACQlD,EAAaC,GADrB,UAEO,KADdqF,EADO,QAEF1E,OAFE,oBAGLsL,EAAY5G,EAAO7G,KAEV,MAAXwB,EALO,gBAMT,EAAK6S,YAAY5G,GANR,gDAQFA,GARE,0CA/CK,wDAgEpBkH,cAAgB,SAAC5P,EAAMC,EAAOC,GAC5BP,QAAQC,IAAIK,SAAcA,GAChB,EAANA,EAAU,EACZC,IAEAA,EAAS,0CArEO,EA4EpB2P,SA5EoB,sCA4ET,WAAMC,GAAN,mBAAApQ,EAAA,4DAEHqQ,EAAeD,EAAgB,IAExBjH,SAAU,EAJd,SAOkB,EAAKW,aAAauG,EAAa9P,OAPjD,OAOH6I,EAPG,OASTiH,EAAalH,SAAU,EAEnBC,GAAgBA,EAAa3I,OAAO,GAEhCuP,EAAe5G,EAAa/F,IAAI,SAAAiD,GAAC,MAAK,CAC1C/F,MAAO+F,EAAEpI,IACT6I,MAAOT,EAAEvI,KACT8R,QAAQ,KAGVQ,EAAa1N,SAAWqN,GAExBK,EAAaR,QAAS,EAIxB,EAAKtK,SAAS,CACZoK,QAAQ,aAAK,EAAKvU,MAAMuU,WA1BjB,yCA5ES,wDA0GpBW,OAAS,WAEP,EAAK1Q,MAAMC,KAAKC,eAAhB,sCAA+B,WAAOrD,EAAOsD,GAAd,+BAAAC,EAAA,wDACxBvD,EADwB,wBAIpBsB,EAAkCgC,EAAlChC,KAAMwS,EAA4BxQ,EAA5BwQ,KAAMpF,EAAsBpL,EAAtBoL,MAEM,KAFCqF,EAAezQ,EAAfyQ,aAEV/P,QACdsP,EAAc,IACd5S,EAAaqT,EAAY,KAEzBT,EAAcS,EAAY,GAC1BrT,EAAaqT,EAAY,IAErB/D,EAAO,EAAKgE,GAAGzE,QAAQK,UACvBmC,EAAS,EAAKkC,OAAO1E,QAAQuB,YAE7BtP,EAAU,CAACF,OAAMwS,OAAMpF,QAAOsB,OAAM+B,SAAQuB,cAAa5S,cAG5D,EAAK2S,WACN7R,EAAQC,IAAM,EAAKD,QAAQC,KApBF,SAwBNF,GAAsBC,GAxBhB,OA2BP,IA3BO,OA2BhBP,QACThB,EAAA,EAAQkP,QAAR,UAAmB,EAAKkE,SAAW,eAAO,eAA1C,8BACA,EAAKlQ,MAAM6L,QAAQkF,UAEnBjU,EAAA,EAAQD,MAAR,UAAiB,EAAKqT,SAAW,eAAO,eAAxC,8BA/ByB,0CAA/B,oCAAA1P,KAAA,iBAxGA,EAAKqQ,GAAKjJ,IAAMoJ,YAChB,EAAKF,OAASlJ,IAAMoJ,YALF,E,iFAkJlBxQ,KAAK0J,aAAa,O,kDAKlB,IAAM7L,EAAUuN,GAAYvN,QAE5BmC,KAAK0P,WAAa7R,EAAQC,IAE1BkC,KAAKnC,QAAUA,GAAW,K,6CAO1BuN,GAAYvN,QAAU,K,+BAGd,IAAD,OAEA6R,EAAqB1P,KAArB0P,SAAU7R,EAAWmC,KAAXnC,QACV8R,EAAyC9R,EAAzC8R,YAAa5S,EAA4Bc,EAA5Bd,WAAYsP,EAAgBxO,EAAhBwO,KAAM+B,EAAUvQ,EAAVuQ,OAEhCgC,EAAc,GACjBV,IAEgB,MAAdC,EACDS,EAAY1M,KAAK3G,IAGjBqT,EAAY1M,KAAKiM,GACjBS,EAAY1M,KAAK3G,KAKrB,IAMMoF,EACJ,8BACE,kBAAC+B,GAAD,CAAYP,QAAS,kBAAM,EAAKnE,MAAM6L,QAAQkF,WAC5C,uBAAMrV,KAAK,aAAaoG,MAAO,CAAC6G,SAAU,OAE5C,8BAAOuH,EAAW,2BAAS,6BAIxBlP,EAAqBR,KAAKR,MAAMC,KAAhCe,kBAEP,OACE,wBAAM2B,MAAOA,GACX,sBAnBmB,CACrBsO,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IAkBhB,kBAAC,GAAD,CAAM/J,MAAM,4BAERnG,EAAkB,OAAQ,CACxBY,aAAcvD,EAAQF,KACtBmD,MAAO,CACL,CAACC,UAAU,EAAMzE,QAAS,sDAH9BkE,CAKG,uBAAOgB,YAAY,iDAG1B,kBAAC,GAAD,CAAMmF,MAAM,4BAERnG,EAAkB,OAAQ,CACxBY,aAAcvD,EAAQsS,KACtBrP,MAAO,CACL,CAACC,UAAU,EAAMzE,QAAS,sDAH9BkE,CAKG,kBAAC6O,GAAD,CAAU7N,YAAY,6CAAUoP,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAIxE,kBAAC,GAAD,CAAMnK,MAAM,4BAGRnG,EAAkB,QAAS,CACzBY,aAAcvD,EAAQkN,MACtBjK,MAAO,CACL,CAACC,UAAU,EAAMzE,QAAS,oDAC1B,CAACmF,UAAWzB,KAAK8P,iBAJrBtP,CAMG,uBAAOtF,KAAK,SAASsG,YAAY,6CAAUuP,WAAW,aAG7D,kBAAC,GAAD,CAAMpK,MAAM,4BAERnG,EAAkB,cAAe,CAC/BY,aAAcgP,EACdtP,MAAO,CACL,CAACC,UAAU,EAAMzE,QAAS,sDAH9BkE,CAME,wBACEgB,YAAY,6CACZ+N,QAASvP,KAAKhF,MAAMuU,QACpBQ,SAAU/P,KAAK+P,aAMvB,kBAAC,GAAD,CAAMpJ,MAAM,4BACV,kBAAC,GAAD,CAAcqK,IAAKhR,KAAKqQ,GAAIhE,KAAMA,KAEpC,kBAAC,GAAD,CAAM1F,MAAM,2BAAO8J,SAAU,CAACC,KAAM,GAAIC,WAAY,CAACD,KAAM,KACzD,kBAAC,GAAD,CAAgBM,IAAKhR,KAAKsQ,OAAQlC,OAAQA,KAE5C,kBAAC,GAAD,KACE,uBAAQlT,KAAK,UAAUyI,QAAS3D,KAAKkQ,QAArC,uB,GA1QmBe,iBAkRhB,OAAKpP,QAAL,CAAcyN,I,oBC7RvBnQ,GAAO,KAAKA,KAMG+R,G,2MAEnBlW,MAAQ,CACNmW,OAAQ,GACRC,OAAQ,I,oNAM0BhG,GAAYvN,QAAvC8R,E,EAAAA,YAAa5S,E,EAAAA,WACH,MAAd4S,E,gCACoB3S,EAAYD,G,OAA3BiF,E,OACAmP,EAASnP,EAAO7G,KAAKwC,KAC3BqC,KAAKmF,SAAS,CAACgM,W,wCAWOvV,QAAQyV,IAAI,CAACrU,EAAY2S,GAAc3S,EAAYD,K,QAAnE6B,E,OACAuS,EAASvS,EAAQ,GAAGzD,KAAKwC,KACzByT,EAASxS,EAAQ,GAAGzD,KAAKwC,KAC/BqC,KAAKmF,SAAS,CACZgM,SACAC,W,kJAUJhG,GAAYvN,QAAU,K,+BAId,IAAD,SAGmCuN,GAAYvN,QAA/CF,EAHA,EAGAA,KAAMwS,EAHN,EAGMA,KAAMpF,EAHZ,EAGYA,MAAOqD,EAHnB,EAGmBA,OAAQ/B,EAH3B,EAG2BA,KAH3B,EAIkBrM,KAAKhF,MAAvBmW,EAJA,EAIAA,OAAQC,EAJR,EAIQA,OAETjP,EACJ,8BACE,kBAAC+B,GAAD,KACE,uBACEhJ,KAAK,aACLoG,MAAO,CAAC2I,YAAa,GAAI9B,SAAU,IACnCxE,QAAS,kBAAM,EAAKnE,MAAM6L,QAAQkF,aAItC,2DAGJ,OACE,wBAAMpO,MAAOA,EAAO1B,UAAU,kBAC5B,4BACE,kBAAC,GAAD,KACE,0BAAMA,UAAU,QAAhB,6BACA,8BAAO9C,IAET,kBAAC,GAAD,KACE,0BAAM8C,UAAU,QAAhB,6BACA,8BAAO0P,IAET,kBAAC,GAAD,KACE,0BAAM1P,UAAU,QAAhB,6BACA,8BAAOsK,EAAP,WAEF,kBAAC,GAAD,KACE,0BAAMtK,UAAU,QAAhB,6BACA,8BAAO0Q,EAAP,IAAgBC,EAAS,WAAQA,EAAS,KAE5C,kBAAC,GAAD,KACE,0BAAM3Q,UAAU,QAAhB,6BACA,8BAEI4L,EAAKpJ,IAAI,SAAAqJ,GAAG,OACV,yBACElK,IAAKkK,EACL5L,IAAKiK,GAAe2B,EACpB7L,UAAU,cACVG,IAAI,YAMd,kBAAC,GAAD,KACE,0BAAMH,UAAU,QAAhB,6BACA,0BAAM6Q,wBAAyB,CAACC,OAAQnD,Y,GAnGTzM,aCNtB6P,I,yLAEjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrO,KAAK,WAAWsO,UAAW7G,GAAa8G,OAAK,IADtD,IAEE,kBAAC,IAAD,CAAOvO,KAAK,qBAAqBsO,UAAWnC,KAC5C,kBAAC,IAAD,CAAOnM,KAAK,kBAAkBsO,UAAWP,KACzC,kBAAC,IAAD,CAAU3Q,GAAG,kB,GAPgBoB,cCL/BxC,GAAO,IAAKA,KAKZuJ,G,oMAOF1I,KAAKR,MAAMmJ,QAAQ3I,KAAKR,MAAMC,Q,+BAGtB,IACAe,EAAsBR,KAAKR,MAAMC,KAAjCe,kBAOR,OACE,2BACE,kBAAC,GAAD,eAAMmG,MAAM,4BAPO,CACrB8J,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAOdlQ,EAAkB,WAAY,CAC5BY,aAAc,GACdN,MAAO,CACL,CAACC,UAAU,EAAMzE,QAAS,sDAH9BkE,CAME,uBAAOgB,YAAY,sD,GA5BXG,aAqCP,OAAKE,QAAL,CAAc6G,I,oBCxCvBvJ,GAAO,IAAKA,KAEVwS,G,KAAAA,SAKaC,G,YAMnB,WAAapS,GAAQ,IAAD,uBAClB,4CAAMA,KAYRqS,SAAW,kBAAM,EAAK7W,MAAM8W,aAbR,EAgBpBC,aAAe,SAAC7P,GACd,OAAOA,EAASoB,OAAO,SAACC,EAAKZ,GAM3B,OALAY,EAAIG,KACF,kBAACiO,GAAD,CAAUxP,MAAOQ,EAAKR,MAAOC,IAAKO,EAAKP,KACpCO,EAAKJ,SAAW,EAAKwP,aAAapP,EAAKJ,UAAY,OAGjDgB,GACN,KAxBe,EA4BpByO,QAAU,SAAAF,GACRjS,QAAQC,IAAI,UAAWgS,GACvB,EAAK3M,SAAS,CAAE2M,iBA9BE,IAIXlP,EAAS,EAAKpD,MAAMrB,KAApByE,MAJW,OAKlB,EAAK5H,MAAQ,CACX8W,YAAalP,GANG,E,yFAmClB5C,KAAKiS,UAAYjS,KAAK+R,aAAa7P,M,uDAOHgQ,GAChCrS,QAAQC,IAAI,qCAAsCoS,GAClD,IAAMtP,EAAQsP,EAAU/T,KAAKyE,MAC7B5C,KAAKmF,SAAS,CACZ2M,YAAalP,M,+BAMf/C,QAAQC,IAAI,qBADL,IAEA3B,EAAQ6B,KAAKR,MAAbrB,KACA2T,EAAe9R,KAAKhF,MAApB8W,YAOP,OACE,6BACE,kBAAC,GAAD,eAAMnL,MAAM,4BAPO,CACrB8J,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAMhB,uBAAOvQ,MAAOhC,EAAKR,KAAMwU,UAAQ,KAGnC,wBACEC,WAAS,EACTC,kBAAkB,EAClBP,YAAaA,EACbE,QAAShS,KAAKgS,SAEd,kBAACL,GAAD,CAAUxP,MAAM,2BAAOC,IAAI,OACxBpC,KAAKiS,iB,GAhFoBhB,iBCIhCqB,G,YASJ,WAAa9S,GAAQ,IAAD,8BAClB,4CAAMA,KARRxE,MAAQ,CACNuX,MAAO,GACPpU,KAAM,GACNqU,WAAW,EACXC,YAAY,GAGM,EAMpBC,WAAa,WACX,EAAKtJ,QAAU,CACb,CACEjH,MAAO,2BACPkH,UAAW,QAEb,CACElH,MAAO,2BACPkH,UAAW,cACXC,OAAQ,SAACqJ,GAAD,OAAiBxO,GAAYwO,KAEvC,CACExQ,MAAO,2BACPkH,UAAW,YACXC,OAAQnF,IAEV,CACEhC,MAAO,qBACPkH,UAAW,eAxBG,EA6BpBuJ,SA7BoB,qBA6BT,8BAAAhT,EAAA,qEACY7B,KADZ,OAEW,KADdiE,EADG,QAEE1E,SACHiV,EAAQvQ,EAAO7G,KACrB,EAAKgK,SAAS,CACZoN,WALK,yCA7BS,EAwCpBM,MAAQ,SAAC1U,GACP,MAAO,CACLwF,QAAS,SAAArE,GAGP,EAAK6F,SAAS,CACZhH,YA9CY,EAuDpB2U,QAAU,WAER,EAAKrT,KAAKC,eAAV,sCAAyB,WAAOrD,EAAOsD,GAAd,mBAAAC,EAAA,wDAClBvD,EADkB,uBAIrB,EAAK8I,SAAS,CACZqN,WAAW,IAINvU,EAAY0B,EAAZ1B,SACP,EAAKwB,KAAKoK,cAVW,SAaA7L,GAAWC,GAbX,OAeD,KAFd+D,EAbe,QAeV1E,QACThB,EAAA,EAAQkP,QAAQ,wCAGVrN,EAAO6D,EAAO7G,KASpB,EAAKgK,SAAS,SAAAnK,GAAK,MAAK,CACtBuX,MAAM,GAAD,oBAAMvX,EAAMuX,OAAZ,CAAmBpU,QAI1B7B,EAAA,EAAQkP,QAAQ,wCAjCG,yCAAzB,oCAAAxL,KAAA,iBAzDkB,EAsGpB+S,WAtGoB,qBAsGP,8BAAAnT,EAAA,4DAGX,EAAKuF,SAAS,CACZsN,YAAY,IAGRtU,EAAO,EAAKnD,MAAMmD,KAElByE,EAAQ,EAAKoQ,KAAKpH,QAAQiG,WAChC1T,EAAKyE,MAAQA,EACbzE,EAAK8U,UAAY3O,KAAKS,MACtB5G,EAAK+U,UAAY,EAAK1T,MAAMtF,KAAKsC,SAZtB,SAeU0B,GAAcC,GAfxB,OAgBS,IAhBT,OAgBAb,SAGLa,EAAKL,MAAQ,EAAK0B,MAAMtF,KAAKiZ,SAC/B,EAAK3T,MAAMN,SACX5C,EAAA,EAAQkP,QAAQ,kEAEhBlP,EAAA,EAAQkP,QAAQ,oDAChB,EAAKrG,SAAS,CACZoN,MAAM,aAAK,EAAKvX,MAAMuX,WAzBjB,0CAnGX,EAAKS,KAAO5L,IAAMoJ,YAHA,E,yFAuIlBxQ,KAAK0S,e,0CAIL1S,KAAK4S,a,+BAGG,IAAD,SAEsC5S,KAAKhF,MAA3CuX,EAFA,EAEAA,MAAOpU,EAFP,EAEOA,KAAMqU,EAFb,EAEaA,UAAWC,EAFxB,EAEwBA,WAEzBtQ,EACJ,8BACE,uBAAQjH,KAAK,UAAUyI,QAAS,kBAAM,EAAKwB,SAAS,CAACqN,WAAW,MAAhE,4BADF,YAEE,uBAAQtX,KAAK,UAAUiX,UAAWhU,EAAKL,IAAK6F,QAAS,kBAAM,EAAKwB,SAAS,CAACsN,YAAY,MAAtF,yCAIJ,OACE,wBAAMtQ,MAAOA,GACX,wBACE+H,UAAQ,EACRC,OAAO,MACPC,WAAYmI,EACZnJ,QAASpJ,KAAKoJ,QACdiB,WAAY,CAACC,gBAAiBI,IAC9B0I,aAAc,CACZlY,KAAM,QACNmY,gBAAiB,CAAClV,EAAKL,KACvBwV,SAAU,SAACnV,GACT,EAAKgH,SAAS,CACZhH,WAKN0U,MAAO7S,KAAK6S,QAGd,wBACE1Q,MAAM,2BACNqI,QAASgI,EACT/M,KAAMzF,KAAK8S,QACXrI,SAAU,WACR,EAAKtF,SAAS,CAACqN,WAAW,IAC1B,EAAK/S,KAAKoK,gBAGZ,kBAAC,GAAD,CACElB,QAAS,SAAClJ,GAAD,OAAU,EAAKA,KAAOA,MAInC,wBACE0C,MAAM,uCACNqI,QAASiI,EACThN,KAAMzF,KAAK+S,WACXtI,SAAU,WACR,EAAKtF,SAAS,CAACsN,YAAY,MAG7B,kBAAC,GAAD,CAAUzB,IAAKhR,KAAKgT,KAAM7U,KAAMA,U,GA7MvBwD,aAoNJG,eACb,SAAA9G,GAAK,MAAK,CAACd,KAAMc,EAAMd,OACvB,CAACgF,WAFY4C,CAGbwQ,ICnOInT,GAAO,IAAKA,KACZsJ,GAAS,KAAOA,OAKhB8K,G,oMASFvT,KAAKR,MAAMmJ,QAAQ3I,KAAKR,MAAMC,Q,+BAGtB,IAAD,EAEeO,KAAKR,MAApB+S,EAFA,EAEAA,MAAOrY,EAFP,EAEOA,KACNsG,EAAsBR,KAAKR,MAAMC,KAAjCe,kBAOR,OACE,sBANqB,CACrBiQ,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAKlB,kBAAC,GAAD,CAAM/J,MAAM,sBAERnG,EAAkB,WAAY,CAC5BY,aAAclH,EAAKsC,UADrBgE,CAGE,uBAAOgB,YAAY,2CAMvBtH,EAAK4D,IAAM,KACT,kBAAC,GAAD,CAAM6I,MAAM,gBAERnG,EAAkB,WAAY,CAC5BY,aAAclH,EAAKuC,UADrB+D,CAGE,uBAAOtF,KAAK,WAAWsG,YAAY,qCAO7C,kBAAC,GAAD,CAAMmF,MAAM,sBAERnG,EAAkB,QAAS,CACzBY,aAAclH,EAAKsZ,OADrBhT,CAGE,uBAAOgB,YAAY,2CAIzB,kBAAC,GAAD,CAAMmF,MAAM,gBAERnG,EAAkB,QAAS,CACzBY,aAAclH,EAAKuZ,OADrBjT,CAGE,uBAAOgB,YAAY,qCAKzB,kBAAC,GAAD,CAAMmF,MAAM,gBAERnG,EAAkB,UAAW,CAC3BY,aAAclH,EAAKiZ,SADrB3S,CAGE,4BAEI+R,EAAMtP,IAAI,SAAA9E,GAAI,OAAI,kBAAC,GAAD,CAAQiE,IAAKjE,EAAKL,IAAKqC,MAAOhC,EAAKL,KAAMK,EAAKR,gB,GA1E3DsT,iBAqFR,OAAKpP,QAAL,CAAc0R,ICnFRG,G,2MAEnB1Y,MAAQ,CACN2Y,MAAO,GACPpB,MAAO,GACPqB,QAAQ,G,EAGVzK,YAAc,WACZ,EAAKC,QAAU,CACb,CACEjH,MAAO,qBACPkH,UAAW,YAEb,CACElH,MAAO,eACPkH,UAAW,SAGb,CACElH,MAAO,eACPkH,UAAW,SAEb,CACElH,MAAO,2BACPkH,UAAW,cACXC,OAAQnF,IAEV,CACEhC,MAAO,2BACPkH,UAAW,UACXC,OAAQ,SAAC6J,GAAD,OAAa,EAAKU,UAAUV,KAEtC,CACEhR,MAAO,eACPmH,OAAQ,SAACpP,GAAD,OACN,8BACE,kBAACgK,GAAD,CAAYP,QAAS,kBAAM,EAAK6F,WAAWtP,KAA3C,gBACA,kBAACgK,GAAD,CAAYP,QAAS,kBAAM,EAAKmQ,WAAW5Z,KAA3C,qB,EAUV6Z,cAAgB,SAACxB,GACf,IAAMsB,EAAYtB,EAAMjP,OAAO,SAACC,EAAKpF,GAEnC,OADAoF,EAAIpF,EAAKL,KAAOK,EAAKR,KACd4F,GACN,IAEH,EAAKsQ,UAAYA,G,EAMnB/J,QAAU,WACR,EAAK5P,KAAO,KACZ,EAAKiL,SAAS,CAACyO,QAAQ,K,EAMzBpK,WAAa,SAACtP,GACZ,EAAKA,KAAOA,EACZ,EAAKiL,SAAS,CACZyO,QAAQ,K,EAOZE,WAAa,SAAC5Z,GACZ,KAAMqL,QAAQ,CACZpD,MAAM,2BAAD,OAASjI,EAAKsC,SAAd,WACLiJ,KAAK,WAAD,2BAAE,sBAAA7F,EAAA,qEACiBvB,GAAcnE,EAAK4D,KADpC,OAEe,IAFf,OAEMR,SACRhB,EAAA,EAAQkP,QAAQ,yCAChB,EAAKwI,YAJH,yCAAF,kDAAC,M,EAaTC,gB,qBAAkB,4BAAArU,EAAA,4DAEhB,EAAKuF,SAAS,CAACyO,QAAQ,IAGjB1Z,EAAO,EAAKuF,KAAKyU,iBACvB,EAAKzU,KAAKoK,cAEN,EAAK3P,OACPA,EAAK4D,IAAM,EAAK5D,KAAK4D,KATP,SAaKS,GAAmBrE,GAbxB,OAeG,IAfH,OAeNoD,SACRhB,EAAA,EAAQkP,QAAR,UAAmB,EAAKtR,KAAO,eAAO,eAAtC,6BACA,EAAK8Z,YAjBS,yC,EAqBlBA,S,qBAAW,kCAAApU,EAAA,qEACYxB,KADZ,OAEW,KADd4D,EADG,QAEE1E,SAAa,EACC0E,EAAO7G,KAAvBwY,EADc,EACdA,MAAOpB,EADO,EACPA,MACd,EAAKwB,cAAcxB,GACnB,EAAKpN,SAAS,CACZwO,QACApB,WAPK,yC,2FAaTvS,KAAKmJ,gB,0CAILnJ,KAAKgU,a,+BAIG,IAAD,SAEwBhU,KAAKhF,MAA7B2Y,EAFA,EAEAA,MAAOpB,EAFP,EAEOA,MAAOqB,EAFd,EAEcA,OACf1Z,EAAO8F,KAAK9F,MAAQ,GAEpBiI,EAAQ,uBAAQjH,KAAK,UAAUyI,QAAS3D,KAAK8J,SAArC,4BAEd,OACE,wBAAM3H,MAAOA,GACX,wBACE+H,UAAQ,EACRC,OAAO,MACPC,WAAYuJ,EACZvK,QAASpJ,KAAKoJ,QACdiB,WAAY,CAACC,gBAAiB,KAGhC,wBACEnI,MAAOjI,EAAK4D,IAAM,2BAAS,2BAC3B0M,QAASoJ,EACTnO,KAAMzF,KAAKiU,gBACXxJ,SAAU,WACR,EAAKhL,KAAKoK,cACV,EAAK1E,SAAS,CAACyO,QAAQ,MAGzB,kBAAC,GAAD,CACEjL,QAAS,SAAAlJ,GAAI,OAAI,EAAKA,KAAOA,GAC7B8S,MAAOA,EACPrY,KAAMA,U,GArKgByH,a,qBCTb0F,G,2MAEnBrM,MAAQ,CACNwM,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3B2M,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,K,EAG9BC,OAAS,WACP,EAAKjP,SAAS,SAAAnK,GAAK,MAAK,CACtBwM,MAAOxM,EAAMwM,MAAMvE,IAAI,SAAAoR,GAAI,OAAIA,EAAO,IACtCF,OAAQnZ,EAAMmZ,OAAO7Q,OAAO,SAACC,EAAKpJ,GAEhC,OADAoJ,EAAIG,KAAKvJ,EAAM,GACRoJ,GACN,Q,EAOP+Q,UAAY,SAAC9M,EAAO2M,GAClB,MAAO,CACLhS,MAAO,CACLoS,KAAM,wBAERC,QAAS,GACTC,OAAQ,CACNtZ,KAAK,CAAC,eAAM,iBAEduZ,MAAO,CACLvZ,KAAM,CAAC,eAAK,qBAAM,qBAAM,eAAK,qBAAM,iBAErCwZ,MAAO,GACPC,OAAQ,CAAC,CACPjX,KAAM,eACNzC,KAAM,MACNC,KAAMqM,GACL,CACD7J,KAAM,eACNzC,KAAM,MACNC,KAAMgZ,M,wEAKF,IAAD,EACiBnU,KAAKhF,MAAtBwM,EADA,EACAA,MAAO2M,EADP,EACOA,OACd,OACE,6BACE,4BACE,uBAAQjZ,KAAK,UAAUyI,QAAS3D,KAAKoU,QAArC,iBAGF,wBAAMjS,MAAM,4BACV,kBAAC,KAAD,CAAc0N,OAAQ7P,KAAKsU,UAAU9M,EAAO2M,W,GAtDrBxS,aCAZgE,G,2MAEnB3K,MAAQ,CACNwM,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAC3B2M,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,K,EAG9BC,OAAS,WACP,EAAKjP,SAAS,SAAAnK,GAAK,MAAK,CACtBwM,MAAOxM,EAAMwM,MAAMvE,IAAI,SAAAoR,GAAI,OAAIA,EAAO,IACtCF,OAAQnZ,EAAMmZ,OAAO7Q,OAAO,SAACC,EAAKpJ,GAEhC,OADAoJ,EAAIG,KAAKvJ,EAAM,GACRoJ,GACN,Q,EAOP+Q,UAAY,SAAC9M,EAAO2M,GAClB,MAAO,CACLhS,MAAO,CACLoS,KAAM,wBAERC,QAAS,GACTC,OAAQ,CACNtZ,KAAK,CAAC,eAAM,iBAEduZ,MAAO,CACLvZ,KAAM,CAAC,eAAK,qBAAM,qBAAM,eAAK,qBAAM,iBAErCwZ,MAAO,GACPC,OAAQ,CAAC,CACPjX,KAAM,eACNzC,KAAM,OACNC,KAAMqM,GACL,CACD7J,KAAM,eACNzC,KAAM,OACNC,KAAMgZ,M,wEAKF,IAAD,EACiBnU,KAAKhF,MAAtBwM,EADA,EACAA,MAAO2M,EADP,EACOA,OACd,OACE,6BACE,4BACE,uBAAQjZ,KAAK,UAAUyI,QAAS3D,KAAKoU,QAArC,iBAGF,wBAAMjS,MAAM,4BACV,kBAAC,KAAD,CAAc0N,OAAQ7P,KAAKsU,UAAU9M,EAAO2M,W,GAtDpBxS,aCAbkT,G,2MAEnBP,UAAY,WACV,MAAO,CACLnS,MAAQ,CACNoS,KAAM,uCACNO,QAAS,2BACTC,EAAE,UAEJP,QAAU,CACRQ,QAAS,OACTpO,UAAW,6BAEb6N,OAAQ,CACNQ,OAAQ,WACRC,KAAM,OACN/Z,KAAM,CAAC,2BAAO,2BAAO,2BAAO,2BAAO,6BAErCyZ,OAAS,CACP,CACEjX,KAAM,2BACNzC,KAAM,MACNia,OAAS,MACTC,OAAQ,CAAC,MAAO,OAChBja,KAAK,CACH,CAACgF,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,KAAMxC,KAAK,6BAEpB0X,UAAW,CACTC,SAAU,CACRC,WAAY,GACZC,cAAe,EACfC,YAAa,2B,EASzBC,WAAa,WACX,MAAO,CACLC,gBAAiB,UAEjBxT,MAAO,CACLoS,KAAM,iBACNW,KAAM,SACNU,IAAK,GACLC,UAAW,CACTtU,MAAO,SAIXiT,QAAU,CACRQ,QAAS,OACTpO,UAAW,6BAGbkP,UAAW,CACTC,MAAM,EACN9U,IAAK,GACLC,IAAK,IACL8U,QAAS,CACPC,eAAgB,CAAC,EAAG,KAGxBrB,OAAS,CACP,CACEjX,KAAK,2BACLzC,KAAK,MACLia,OAAS,MACTC,OAAQ,CAAC,MAAO,OAChBja,KAAK,CACH,CAACgF,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,IAAKxC,KAAK,4BACjB,CAACwC,MAAM,IAAKxC,KAAK,6BACjBuY,KAAK,SAAUtW,EAAGqG,GAAK,OAAOrG,EAAEO,MAAQ8F,EAAE9F,QAC5CgW,SAAU,SACVxP,MAAO,CACLyP,OAAQ,CACNP,UAAW,CACTtU,MAAO,8BAIb8U,UAAW,CACTD,OAAQ,CACNE,UAAW,CACT/U,MAAO,4BAETgV,OAAQ,GACRlW,OAAQ,GACRmW,QAAS,KAGbnB,UAAW,CACTe,OAAQ,CACN7U,MAAO,UACPgU,WAAY,IACZE,YAAa,uBAIjBgB,cAAe,QACfC,gBAAiB,aACjBC,eAAgB,SAAUC,GACxB,OAAuB,IAAhBC,KAAKC,c,wEAQpB,OACE,6BACE,wBAAM3U,MAAM,sBACV,kBAAC,KAAD,CAAc0N,OAAQ7P,KAAKsU,YAAahT,MAAO,CAACiF,OAAQ,QAE1D,wBAAMpE,MAAM,sBACV,kBAAC,KAAD,CAAc0N,OAAQ7P,KAAK0V,aAAcpU,MAAO,CAACiF,OAAQ,a,GA9HlC5E,a,qCCG3BoV,I,mNAEJC,OAAS,WACP,EAAKxX,MAAMR,aAAa,gBACxB,EAAKQ,MAAM6L,QAAQ4L,QAAQ,U,wEAI3B,OAEE,wBAAKxW,UAAU,aACb,wBAAKiQ,KAAM,GAAIjQ,UAAU,SACzB,wBAAKiQ,KAAM,GAAIjQ,UAAU,SACvB,mCACA,wGACA,6BACE,uBAAQvF,KAAK,UAAUyI,QAAS3D,KAAKgX,QAArC,mC,GAhBWrV,cA0BRG,eACb,KACA,CAAC9C,iBAFY8C,CAGbiV,ICrBMG,G,KAAAA,OAAQC,G,KAAAA,MAAOC,G,KAAAA,QAKjBC,G,iLAEF,IAAMnd,EAAO8F,KAAKR,MAAMtF,KAExB,OAAIA,GAASA,EAAK4D,IAKhB,wBAAQwD,MAAO,CAACwN,UAAW,SACzB,kBAACqI,GAAD,KACE,kBAAC,GAAD,OAEF,4BACE,kBAAC,GAAD,eACA,kBAACC,GAAD,CAAS9V,MAAO,CAACoK,OAAQ,GAAIiK,gBAAiB,SAC5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUjE,OAAK,EAAC4F,KAAK,IAAI/W,GAAG,UAC5B,kBAAC,IAAD,CAAO4C,KAAK,QAAQsO,UAAW9J,KAC/B,kBAAC,IAAD,CAAOxE,KAAK,YAAYsO,UAAW3I,KACnC,kBAAC,IAAD,CAAO3F,KAAK,WAAWsO,UAAWD,KAClC,kBAAC,IAAD,CAAOrO,KAAK,QAAQsO,UAAWa,KAC/B,kBAAC,IAAD,CAAOnP,KAAK,QAAQsO,UAAWiC,KAC/B,kBAAC,IAAD,CAAOvQ,KAAK,cAAcsO,UAAWpK,KACrC,kBAAC,IAAD,CAAOlE,KAAK,eAAesO,UAAW9L,KACtC,kBAAC,IAAD,CAAOxC,KAAK,cAAcsO,UAAWoD,KAErC,kBAAC,IAAD,CAAOpD,UAAWsF,KAXpB,MAcF,kBAACG,GAAD,CAAQ5V,MAAO,CAACiW,UAAW,SAAUhW,MAAO,YAA5C,0IAxBG,kBAAC,IAAD,CAAUhB,GAAG,e,GANNoB,aAsCLG,eACb,SAAA9G,GAAK,MAAK,CAACd,KAAMc,EAAMd,OACvB,GAFa4H,CAGbuV,ICvDmBG,G,iLAIjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,SACE,kBAAC,IAAD,CAAOrU,KAAK,SAASsO,UAAWrS,KAChC,kBAAC,IAAD,CAAO+D,KAAK,IAAIsO,UAAW4F,W,GARJ1V,aCEjC8V,IAASnO,OACP,kBAAC,IAAD,CAAUnP,MAAOA,GACf,kBAAC,GAAD,OAEDud,SAASC,eAAe,U,oBCf3BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.e3f89e1a.chunk.js","sourcesContent":["/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","/*\r\n包含n个action的type常量标识名称的模块\r\n */\r\nexport const SET_HEAD_TITLE = 'set_head_title' // 设置头部标题\r\nexport const RECEIVE_USER = 'receive_user'  // 接收用户信息\r\nexport const SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\r\nexport const RESET_USER = 'reset_user' // 重置用户信息","/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\nimport {combineReducers} from 'redux'\r\n\r\n/*\r\n用来管理头部标题的reducer函数\r\n */\r\nimport storageUtils from \"../utils/storageUtils\"\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\n\r\nconst initHeadTitle = ''\r\n\r\nfunction headTitle(state = initHeadTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n用来管理当前登陆用户的reducer函数\r\n */\r\nconst initUser = storageUtils.getUser()\r\n\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg\r\n      // state.errorMsg = errorMsg  // 不要直接修改原本状态数据\r\n      return {...state, errorMsg}\r\n    case RESET_USER:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*\r\n向外默认暴露的是合并产生的总的reducer函数\r\n管理的总的state的结构:\r\n  {\r\n    headTitle: '首页',\r\n    user: {}\r\n  }\r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n})","/*\r\nredux最核心的管理对象store\r\n */\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer'\r\n\r\n// 向外默认暴露store\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n","// \"proxy\": \"http://localhost:5000\",\r\n// 上面这一句放在 package.json\r\n\r\n/*\r\n要求: 能根据接口文档定义接口请求\r\n包含应用中所有接口请求函数的模块\r\n每个函数的返回值都是promise\r\n\r\n基本要求: 能根据接口文档定义接口请求函数\r\n */\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\n\r\n// const BASE = '/api'\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = ''\r\n// 登陆\r\n/*\r\nexport function reqLogin(username, password) {\r\n  return ajax('/login', {username, password}, 'POST')\r\n}*/\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', {parentId})\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize})\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 搜索商品分页列表 (根据商品描述)\r\n/*export const reqSearchProducts2 = ({pageNum, pageSize, searchName}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  productDesc: searchName,\r\n})*/\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      // console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */","/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER\r\n} from './action-types'\r\nimport {reqLogin} from '../api'\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n/*\r\n设置头部标题的同步action\r\n */\r\nexport const setHeadTitle = (headTitle) => ({type: SET_HEAD_TITLE, data: headTitle})\r\n\r\n/*\r\n接收用户的同步action\r\n */\r\nexport const receiveUser = (user) => ({type: RECEIVE_USER, user})\r\n\r\n/*\r\n显示错误信息同步action\r\n */\r\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, errorMsg})\r\n\r\n/*\r\n退出登陆的同步action\r\n */\r\nexport const logout = () =>  {\r\n  // 删除local中的user\r\n  storageUtils.removeUser()\r\n  // 返回action对象\r\n  return {type: RESET_USER}\r\n}\r\n\r\n/*\r\n登陆的异步action\r\n */\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    // 1. 执行异步ajax请求\r\n    const result = await reqLogin(username, password)  // {status: 0, data: user} {status: 1, msg: 'xxx'}\r\n    // 2.1. 如果成功, 分发成功的同步action\r\n    if(result.status===0) {\r\n      const user = result.data\r\n      // 保存local中\r\n      storageUtils.saveUser(user)\r\n      // 分发接收用户的同步action\r\n      dispatch(receiveUser(user))\r\n    } else { // 2.2. 如果失败, 分发失败的同步action\r\n      const msg = result.msg\r\n      // message.error(msg)\r\n      dispatch(showErrorMsg(msg))\r\n    }\r\n\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport {login} from '../../redux/actions'\r\n\r\nconst Item = Form.Item // 不能写在import之前\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n\r\n    // 阻止事件的默认行为\r\n    event.preventDefault()\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // console.log('提交登陆的ajax请求', values)\r\n        // 请求登陆\r\n        const {username, password} = values\r\n\r\n        // 调用分发异步action的函数 => 发登陆的异步请求, 有了结果后更新状态\r\n        this.props.login(username, password)\r\n\r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    // console.log('validatePwd()', rule, value)\r\n    if(!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length<4) {\r\n      callback('密码长度不能小于4位')\r\n    } else if (value.length>12) {\r\n      callback('密码长度不能大于12位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是英文、数字或下划线组成')\r\n    } else {\r\n      callback() // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  }\r\n\r\n  render () {\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = this.props.user\r\n    if(user && user._id) {\r\n      return <Redirect to='/home'/>\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <div className={user.errorMsg ? 'error-msg show' : 'error-msg'}>{user.errorMsg}</div>\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                /*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */\r\n              }\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 4, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                  ],\r\n                  initialValue: 'admin', // 初始值\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\nconst WrapLogin = Form.create()(Login)\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {login}\r\n)(WrapLogin)\r\n\r\n\r\n/*\r\n1. 前台表单验证\r\n2. 收集表单输入数据\r\n */\r\n\r\n/*\r\nasync和await\r\n1. 作用?\r\n   简化promise对象的使用: 不用再使用then()来指定成功/失败的回调函数\r\n   以同步编码(没有回调函数了)方式实现异步流程\r\n2. 哪里写await?\r\n    在返回promise的表达式左侧写await: 不想要promise, 想要promise异步执行的成功的value数据\r\n3. 哪里写async?\r\n    await所在函数(最近的)定义的左侧写async\r\n */","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n/*   {\r\n    title: '订单管理', // 订单管理待开发\r\n    key: '/order',\r\n    icon: 'windows',\r\n  }, */\r\n]\r\n\r\nexport default menuList","import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\nimport {setHeadTitle} from '../../redux/actions'\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = this.props.user.role.menus\r\n    const username = this.props.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map() + 递归调用\r\n  */\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map(item => {\r\n      /*\r\n        {\r\n          title: '首页', // 菜单标题名称\r\n          key: '/home', // 对应的path\r\n          icon: 'home', // 图标名称\r\n          children: [], // 可能有, 也可能没有\r\n        }\r\n\r\n        <Menu.Item key=\"/home\">\r\n          <Link to='/home'>\r\n            <Icon type=\"pie-chart\"/>\r\n            <span>首页</span>\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"mail\"/>\r\n              <span>商品</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item/>\r\n          <Menu.Item/>\r\n        </SubMenu>\r\n      */\r\n      if(!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.reduce((pre, item) => {\r\n\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n\r\n\r\n        // 向pre添加<Menu.Item>\r\n        if(!item.children) {\r\n          // 判断item是否是当前对应的item\r\n          if (item.key===path || path.indexOf(item.key)===0) {\r\n            // 更新redux中的headerTitle状态\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n\r\n          pre.push((\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n\r\n\r\n          // 向pre添加<SubMenu>\r\n          pre.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  /*\r\n  在第一次render()之前执行一次\r\n  为第一个render()准备数据(必须同步的)\r\n   */\r\n  UNSAFE_componentWillMount () {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    // console.log('render()', path)\r\n    if(path.indexOf('/product')===0) { // 当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to='/' className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>电商后台</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {setHeadTitle}\r\n)(withRouter(LeftNav))","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LinkButton from '../link-button'\r\nimport {reqWeather} from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport './index.less'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: '', // 天气图片url\r\n    weather: '', // 天气的文本\r\n  }\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    }, 1000)\r\n  }\r\n\r\n  getWeather = async () => {\r\n    // 调用接口请求异步获取数据\r\n    const {dayPictureUrl, weather} = await reqWeather('北京')\r\n    // 更新状态\r\n    this.setState({dayPictureUrl, weather})\r\n  }\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item => {\r\n      if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n        // 如果有值才说明有匹配的\r\n        if(cItem) {\r\n          // 取出它的title\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        console.log('OK', this)\r\n        this.props.logout()\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount () {\r\n    // 获取当前的时间\r\n    this.getTime()\r\n    // 获取当前天气\r\n    this.getWeather()\r\n  }\r\n  /*\r\n  // 不能这么做: 不会更新显示\r\n  UNSAFE_componentWillMount () {\r\n    this.title = this.getTitle()\r\n  }*/\r\n\r\n  /*\r\n  当前组件卸载之前调用\r\n   */\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {currentTime, dayPictureUrl, weather} = this.state\r\n\r\n    const username = this.props.user.username\r\n\r\n    // 得到当前需要显示的title\r\n    // const title = this.getTitle()\r\n    const title = this.props.headTitle\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt=\"weather\"/>\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({headTitle: state.headTitle, user: state.user}),\r\n  {logout}\r\n)(withRouter(Header))","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Icon,\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n\r\n  render() {\r\n    const {isVisited} = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <Line/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categorys, parentId} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => <Option value={c._id}>{c.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n更新分类的form组件\r\n */\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    // 将form对象通过setForm()传递父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {categoryName} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  message,\r\n  Modal\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\n/*\r\n商品分类路由\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  }\r\n\r\n  /*\r\n  初始化Table所有列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类的名称',\r\n        dataIndex: 'name', // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 300,\r\n        render: (category) => ( // 返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  /*\r\n  异步获取一级/二级分类列表显示\r\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\r\n   */\r\n  getCategorys = async (parentId) => {\r\n\r\n    // 在发请求前, 显示loading\r\n    this.setState({loading: true})\r\n    parentId = parentId || this.state.parentId\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({loading: false})\r\n\r\n    if(result.status===0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data\r\n      if(parentId==='0') {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys\r\n        })\r\n        // console.log('----', this.state.categorys.length)\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      console.log('parentId', this.state.parentId) // '0'\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n    // 清除输入数据\r\n    this.form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示添加的确认框\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 收集数据, 并提交添加分类的请求\r\n        const {parentId, categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if(result.status===0) {\r\n\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if(parentId===this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategorys()\r\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n            this.getCategorys('0')\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n\r\n  /*\r\n  更新分类\r\n   */\r\n  updateCategory = () => {\r\n    console.log('updateCategory()')\r\n    // 进行表单验证, 只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if(!err) {\r\n        // 1. 隐藏确定框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n\r\n        // 2. 发请求更新分类\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategorys()\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  为第一次render()准备数据\r\n   */\r\n  UNSAFE_componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  /*\r\n  执行异步任务: 发异步ajax请求\r\n   */\r\n  componentDidMount () {\r\n    // 获取一级分类列表显示\r\n    this.getCategorys()\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取状态数据\r\n    const {categorys, subCategorys, parentId, parentName, loading, showStatus} = this.state\r\n    // 读取指定的分类\r\n    const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n    // card的左侧\r\n    const title = parentId === '0' ? '一级分类列表' : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'/>\r\n        添加\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus===1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n  product: {}, // 指定的商品对象\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  message\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的默认子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 商品的数组\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName', // 根据哪个字段搜索\r\n  }\r\n\r\n  /*\r\n  初始化table的列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status===1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status===1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status===1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /*\r\n  显示商品详情界面\r\n   */\r\n  showDetail = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/detail')\r\n  }\r\n\r\n  /*\r\n  显示修改商品界面\r\n   */\r\n  showUpdate = (procut) => {\r\n    // 缓存product对象 ==> 给detail组件使用\r\n    memoryUtils.product = procut\r\n    this.props.history.push('/product/addupdate')\r\n  }\r\n\r\n  /*\r\n  获取指定页码的列表数据显示\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n    this.setState({loading: true}) // 显示loading\r\n\r\n    const {searchName, searchType} = this.state\r\n    // 如果搜索关键字有值, 说明我们要做搜索分页\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else { // 一般分页请求\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n\r\n    this.setState({loading: false}) // 隐藏loading\r\n    if (result.status === 0) {\r\n      // 取出分页数据, 更新状态, 显示分页列表\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n  更新指定商品的状态\r\n   */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    // 取出状态数据\r\n    const {products, total, loading, searchType, searchName} = this.state\r\n\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value= {searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType:value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={event => this.setState({searchName:event.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'/>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal, message } from 'antd'\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [\r\n      /*{\r\n        uid: '-1', // 每个file都有自己唯一的id\r\n        name: 'xxx.png', // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n      },*/\r\n    ],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length>0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs  = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if(file.status==='done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if(result.status===0) {\r\n        message.success('上传图片成功!')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status===0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n          accept='image/*'  /*只接收图片格式*/\r\n          name='image' /*请求参数名*/\r\n          listType=\"picture-card\"  /*卡片样式*/\r\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    console.log('onEditorStateChange()')\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","import React, {PureComponent} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  Cascader,\r\n  Button,\r\n  message\r\n} from 'antd'\r\n\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqAddOrUpdateProduct} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst {Item} = Form\r\nconst { TextArea } = Input\r\n\r\n/*\r\nProduct的添加和更新的子路由组件\r\n */\r\nclass ProductAddUpdate extends PureComponent {\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }))\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId} = product\r\n    if(isUpdate && pCategoryId!=='0') {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(option => option.value===pCategoryId)\r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options\r\n    })\r\n  }\r\n\r\n  /*\r\n  异步获取一级/二级分类列表, 并显示\r\n  async函数的返回值是一个新的promise对象, promise的结果和值由async的结果来决定\r\n   */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)   // {status: 0, data: categorys}\r\n    if (result.status===0) {\r\n      const categorys = result.data\r\n      // 如果是一级分类列表\r\n      if (parentId==='0') {\r\n        this.initOptions(categorys)\r\n      } else { // 二级列表\r\n        return categorys  // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  验证价格的自定义验证函数\r\n   */\r\n  validatePrice = (rule, value, callback) => {\r\n    console.log(value, typeof value)\r\n    if (value*1 > 0) {\r\n      callback() // 验证通过\r\n    } else {\r\n      callback('价格必须大于0') // 验证没通过\r\n    }\r\n  }\r\n\r\n  /*\r\n  用加载下一级列表的回调函数\r\n   */\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length>0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n  submit = () => {\r\n    // 进行表单验证, 如果通过了, 才发送请求\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 1. 收集数据, 并封装成product对象\r\n        const {name, desc, price, categoryIds} = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length===1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.pw.current.getImgs()\r\n        const detail = this.editor.current.getDetail()\r\n\r\n        const product = {name, desc, price, imgs, detail, pCategoryId, categoryId}\r\n\r\n        // 如果是更新, 需要添加_id\r\n        if(this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n\r\n        // 2. 调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        // 3. 根据结果提示\r\n        if (result.status===0) {\r\n          message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    // 取出携带的state\r\n    const product = memoryUtils.product  // 如果是添加没值, 否则有值\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product._id\r\n    // 保存商品(如果没有, 保存是{})\r\n    this.product = product || {}\r\n  }\r\n\r\n  /*\r\n  在卸载之前清除保存的数据\r\n  */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n  render() {\r\n\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId, categoryId, imgs, detail} = product\r\n    // 用来接收级联分类ID的数组\r\n    const categoryIds = []\r\n    if(isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if(pCategoryId==='0') {\r\n        categoryIds.push(categoryId)\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },  // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    // 头部左侧标题\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{fontSize: 20}}/>\r\n        </LinkButton>\r\n        <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {\r\n              getFieldDecorator('name', {\r\n                initialValue: product.name,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品名称'}\r\n                ]\r\n              })(<Input placeholder='请输入商品名称'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {\r\n              getFieldDecorator('desc', {\r\n                initialValue: product.desc,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品描述'}\r\n                ]\r\n              })(<TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />)\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n\r\n            {\r\n              getFieldDecorator('price', {\r\n                initialValue: product.price,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品价格'},\r\n                  {validator: this.validatePrice}\r\n                ]\r\n              })(<Input type='number' placeholder='请输入商品价格' addonAfter='元'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {\r\n              getFieldDecorator('categoryIds', {\r\n                initialValue: categoryIds,\r\n                rules: [\r\n                  {required: true, message: '必须指定商品分类'},\r\n                ]\r\n              })(\r\n                <Cascader\r\n                  placeholder='请指定商品分类'\r\n                  options={this.state.options}  /*需要显示的列表数据数组*/\r\n                  loadData={this.loadData} /*当选择某个列表项, 加载下一级列表的监听回调*/\r\n                />\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={imgs}/>\r\n          </Item>\r\n          <Item label=\"商品详情\" labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n            <RichTextEditor ref={this.editor} detail={detail}/>\r\n          </Item>\r\n          <Item>\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)\r\n\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  List\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst Item = List.Item\r\n\r\n\r\n/*\r\nProduct的详情子路由组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  state = {\r\n    cName1: '', // 一级分类名称\r\n    cName2: '', // 二级分类名称\r\n  }\r\n\r\n  async componentDidMount () {\r\n\r\n    // 得到当前商品的分类ID\r\n    const {pCategoryId, categoryId} = memoryUtils.product\r\n    if(pCategoryId==='0') { // 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({cName1})\r\n    } else { // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({\r\n        cName1,\r\n        cName2\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n 在卸载之前清除保存的数据\r\n */\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    // 读取携带过来的state数据\r\n    const {name, desc, price, detail, imgs} = memoryUtils.product\r\n    const {cName1, cName2} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon\r\n            type='arrow-left'\r\n            style={{marginRight: 10, fontSize: 20}}\r\n            onClick={() => this.props.history.goBack()}\r\n          />\r\n        </LinkButton>\r\n\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类:</span>\r\n            <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品图片:</span>\r\n            <span>\r\n              {\r\n                imgs.map(img => (\r\n                  <img\r\n                    key={img}\r\n                    src={BASE_IMG_URL + img}\r\n                    className=\"product-img\"\r\n                    alt=\"img\"\r\n                  />\r\n                ))\r\n              }\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{__html: detail}}>\r\n            </span>\r\n          </Item>\r\n\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n\r\n/*\r\n商品路由\r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/}\r\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n        <Route path='/product/detail' component={ProductDetail}/>\r\n        <Redirect to='/product'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '角色名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  UNSAFE_componentWillReceiveProps (nextProps) {\r\n    console.log('UNSAFE_componentWillReceiveProps()', nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    console.log('AuthForm render()')\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.name} disabled/>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from \"../../utils/constants\"\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {logout} from '../../redux/actions'\r\n\r\n/*\r\n角色路由\r\n */\r\nclass Role extends Component {\r\n\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status===0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        // console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        // 收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status===0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.success('添加角色失败')\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = this.props.user.username\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => { // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {logout}\r\n)(Role)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, user} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username,\r\n            })(\r\n              <Input placeholder='请输入用户名'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        {\r\n          user._id ? null : (\r\n            <Item label='密码'>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: user.password,\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n            </Item>\r\n          )\r\n        }\r\n\r\n        <Item label='手机号'>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              initialValue: user.phone,\r\n            })(\r\n              <Input placeholder='请输入手机号'/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮箱'>\r\n          {\r\n            getFieldDecorator('email', {\r\n              initialValue: user.email,\r\n            })(\r\n              <Input placeholder='请输入邮箱'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        <Item label='角色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {formateDate} from \"../../utils/dateUtils\"\r\nimport LinkButton from \"../../components/link-button/index\"\r\nimport {reqDeleteUser, reqUsers, reqAddOrUpdateUser} from \"../../api/index\";\r\nimport UserForm from './user-form'\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null // 去除前面保存的user\r\n    this.setState({isShow: true})\r\n  }\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user // 保存user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if(result.status===0) {\r\n          message.success('删除用户成功!')\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n\r\n    this.setState({isShow: false})\r\n\r\n    // 1. 收集输入数据\r\n    const user = this.form.getFieldsValue()\r\n    this.form.resetFields()\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user)\r\n    // 3. 更新列表显示\r\n    if(result.status===0) {\r\n      message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n  }\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status===0) {\r\n      const {users, roles} = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getUsers()\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {users, roles, isShow} = this.state\r\n    const user = this.user || {}\r\n\r\n    const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 2}}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields()\r\n            this.setState({isShow: false})\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={form => this.form = form}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setHeadTitle} from '../../redux/actions'\r\nimport './not-found.less'\r\n\r\n/*\r\n前台404页面\r\n */\r\nclass NotFound extends Component {\r\n\r\n  goHome = () => {\r\n    this.props.setHeadTitle('首页')\r\n    this.props.history.replace('/home')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {setHeadTitle}\r\n)(NotFound)","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../not-found/not-found'\r\n// import Order from '../order/order'\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nclass Admin extends Component {\r\n  render () {\r\n    const user = this.props.user\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if(!user || !user._id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Layout style={{minHeight: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin: 20, backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Redirect exact from='/' to='/home'/>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/charts/bar' component={Bar}/>\r\n              <Route path='/charts/line' component={Line}/>\r\n              <Route path='/charts/pie' component={Pie}/>\r\n              {/* <Route path=\"/order\" component={Order}/> */}\r\n              <Route component={NotFound}/> {/*上面没有一个匹配, 直接显示*/}\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: 'center', color: '#cccccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({user: state.user}),\r\n  {}\r\n)(Admin)","import React, {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport store from './redux/store'\r\nimport App from './App'\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.2c767e7c.jpg\";"],"sourceRoot":""}